variable "projects" {
  description = "Map for list of projects"
  type = map(object({

    #required
    name = string

    shared_groups = map(object({
      group_access = string

    }))

    #optional
    allow_merge_on_skipped_pipeline             = optional(bool, true)
    allow_pipeline_trigger_approve_deployment   = optional(bool)
    analytics_access_level                      = optional(string, "enabled")
    approvals_before_merge                      = optional(number, 0)
    archive_on_destroy                          = optional(bool)
    archived                                    = optional(bool)
    auto_cancel_pending_pipelines               = optional(string)
    auto_devops_deploy_strategy                 = optional(bool)
    auto_devops_enabled                         = optional(bool)
    autoclose_referenced_issues                 = optional(bool)
    avatar                                      = optional(string)
    avatar_hash                                 = optional(string)
    build_git_strategy                          = optional(string)
    build_timeout                               = optional(number)
    builds_access_level                         = optional(string)
    ci_config_path                              = optional(string)
    ci_default_git_depth                        = optional(number)
    ci_forward_deployment_enabled               = optional(bool)
    ci_pipeline_variables_minimum_override_role = optional(string)
    ci_restrict_pipeline_cancellation_role      = optional(string)
    ci_separated_caches                         = optional(bool)
    container_expiration_policy = optional(object({
      cadence           = optional(string)
      enabled           = optional(bool)
      keep_n            = optional(number)
      name_regex_delete = optional(string)
      name_regex_keep   = optional(string)
      older_than        = optional(string)

      }
    ))
    container_registry_access_level                  = optional(string)
    default_branch                                   = optional(string, "main")
    description                                      = optional(string)
    emails_enabled                                   = optional(bool)
    environments_access_level                        = optional(string)
    external_authorization_classification_label      = optional(string)
    feature_flags_access_level                       = optional(string)
    forked_from_project_id                           = optional(number)
    forking_access_level                             = optional(string)
    group_runners_enabled                            = optional(bool)
    group_with_project_templates_id                  = optional(number)
    import_url                                       = optional(string)
    import_url_password                              = optional(string)
    import_url_username                              = optional(string)
    infrastructure_access_level                      = optional(string)
    initialize_with_readme                           = optional(bool)
    issues_access_level                              = optional(string)
    issues_enabled                                   = optional(bool)
    issues_template                                  = optional(string)
    keep_latest_artifact                             = optional(bool)
    lfs_enabled                                      = optional(string)
    merge_commit_template                            = optional(string)
    merge_method                                     = optional(string)
    merge_pipelines_enabled                          = optional(bool)
    merge_requests_access_level                      = optional(string)
    merge_requests_enabled                           = optional(bool)
    merge_requests_template                          = optional(string)
    merge_trains_enabled                             = optional(bool)
    mirror                                           = optional(bool)
    mirror_overwrites_diverged_branches              = optional(bool)
    mirror_trigger_builds                            = optional(bool)
    model_experiments_access_level                   = optional(string)
    model_registry_access_level                      = optional(string)
    monitor_access_level                             = optional(string)
    mr_default_target_self                           = optional(bool)
    namespace_id                                     = optional(number)
    only_allow_merge_if_all_discussions_are_resolved = optional(bool)
    only_allow_merge_if_pipeline_succeeds            = optional(bool)
    only_mirror_protected_branches                   = optional(bool)
    packages_enabled                                 = optional(bool)
    pages_access_level                               = optional(string)
    path                                             = optional(string)
    pre_receive_secret_detection_enabled             = optional(bool)
    prevent_merge_without_jira_issue                 = optional(bool)
    printing_merge_request_link_enabled              = optional(bool)
    public_builds                                    = optional(bool)
    public_jobs                                      = optional(bool)
    push_rules = optional(object({
      author_email_regex            = optional(string)
      branch_name_regex             = optional(string)
      commit_committer_check        = optional(bool, false)
      commit_committer_name_check   = optional(bool, false)
      commit_message_regex          = optional(string)
      commit_message_negative_regex = optional(string)
      deny_delete_tag               = optional(bool, false)
      file_name_regex               = optional(string)
      max_file_size                 = optional(number, 10000)
      member_check                  = optional(bool, false)
      prevent_secrets               = optional(bool, true)
      reject_non_dco_commits        = optional(bool, false)
      reject_unsigned_commits       = optional(bool, true)
    }))
    releases_access_level                   = optional(string)
    remove_source_branch_after_merge        = optional(bool)
    repository_access_level                 = optional(string)
    repository_storage                      = optional(string)
    request_access_enabled                  = optional(bool)
    requirements_access_level               = optional(string)
    resolve_outdated_diff_discussions       = optional(bool)
    restrict_user_defined_variables         = optional(bool)
    security_and_compliance_access_level    = optional(string)
    shared_runners_enabled                  = optional(bool)
    skip_wait_for_default_branch_protection = optional(bool)
    snippets_access_level                   = optional(string)
    snippets_enabled                        = optional(bool)
    squash_commit_template                  = optional(string)
    squash_option                           = optional(string)
    suggestion_commit_message               = optional(string)
    template_project_id                     = optional(number)
    topics                                  = optional(list(string))
    use_custom_template                     = optional(bool)
    visibility_level                        = optional(string)
    wiki_access_level                       = optional(string)
    wiki_enabled                            = optional(bool)
  }))
}


variable "groups" {
  description = "Map for list of groups"
  type = map(object({
    id                                = number
    name                              = string
    path                              = string
    auto_devops_enabled               = optional(bool, false)
    description                       = optional(string, "")
    default_branch                    = optional(string, "main")
    emails_enabled                    = optional(bool, true)
    lfs_enabled                       = optional(bool, true)
    mentions_disabled                 = optional(bool, false)
    parent_id                         = optional(number, null)
    project_creation_level            = optional(string, "developer")
    request_access_enabled            = optional(bool, true)
    require_two_factor_authentication = optional(bool, false)
    subgroup_creation_level           = optional(string, "maintainer")
    two_factor_grace_period           = optional(number)
    visibility_level                  = optional(string, "internal")
  }))
}
